// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestApplicationApi.Data;

#nullable disable

namespace TestApplicationApi.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    partial class EF_DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestApplicationApi.Data.Acountcs", b =>
                {
                    b.Property<string>("accountName")
                        .HasColumnType("text");

                    b.Property<string>("Contactemail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("accountName");

                    b.HasIndex("Contactemail");

                    b.ToTable("Acounts");
                });

            modelBuilder.Entity("TestApplicationApi.Data.Contact", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("contact_firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("contact_lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("email");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("TestApplicationApi.Data.Incident", b =>
                {
                    b.Property<string>("incident_name")
                        .HasColumnType("text");

                    b.Property<string>("AcountaccountName")
                        .HasColumnType("text");

                    b.Property<string>("incident_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("incident_name");

                    b.HasIndex("AcountaccountName");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("TestApplicationApi.Data.Acountcs", b =>
                {
                    b.HasOne("TestApplicationApi.Data.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("Contactemail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("TestApplicationApi.Data.Incident", b =>
                {
                    b.HasOne("TestApplicationApi.Data.Acountcs", "Acount")
                        .WithMany()
                        .HasForeignKey("AcountaccountName");

                    b.Navigation("Acount");
                });
#pragma warning restore 612, 618
        }
    }
}
